[
  {
    "objectID": "User_Manual/User_Manual.html",
    "href": "User_Manual/User_Manual.html",
    "title": "User Manual",
    "section": "",
    "text": "Click here to access R Shiny User Manual\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Shinyapp/app/data/geospatial/MPSZ-2019.html",
    "href": "Shinyapp/app/data/geospatial/MPSZ-2019.html",
    "title": "ISSS608 Group 3 - Analysis of Climate Impact on Dengue",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false    \n\n\n\n Back to top"
  },
  {
    "objectID": "Prototype/regression.html",
    "href": "Prototype/regression.html",
    "title": "Explanatory models",
    "section": "",
    "text": "pacman::p_load(\n  tidyverse,\n  fable,\n  tsibble,\n  feasts,\n  patchwork,\n  plotly,\n  lubridate,\n  caret,\n  performance,\n  ggstatsplot,\n  qqplotr,\n  tsibbledata\n)\n\n\ndf &lt;- read_csv(\"data/dengue_climate_joined_by_week_transformed_diff.csv\")\n\n\nmdl &lt;- lm(Cases ~ avg_temp, data = df)\n\n\n\n\ni &lt;- c(\"avg_temp\",\"tot_rainfall\",\"avg_wind\")\nj &lt;- \"\"\nfor (v in i) {\n  if (j == \"\") {\n    j &lt;- v\n  } else {\n    j &lt;- paste0(j,\"+\",v)\n  }\n}\n\nmdl &lt;- lm(as.formula(paste0(\"Cases ~ \",j)), data=df)\n\n\nsummary(mdl)\n\n\nCall:\nlm(formula = as.formula(paste0(\"Cases ~ \", j)), data = df)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-360.77 -166.33  -71.29   67.18 1497.88 \n\nCoefficients:\n               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  -2373.5890   647.8730  -3.664 0.000287 ***\navg_temp        79.4251    21.2559   3.737 0.000217 ***\ntot_rainfall     2.0540     0.6625   3.100 0.002087 ** \navg_wind        39.2656    10.2478   3.832 0.000151 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 278.9 on 355 degrees of freedom\nMultiple R-squared:  0.05728,   Adjusted R-squared:  0.04931 \nF-statistic:  7.19 on 3 and 355 DF,  p-value: 0.0001068\n\n\n\n\n\n\nggcoefstats(mdl, \n            output = \"plot\")\n\n\n\n\n\n\n\n\nmdl %&gt;% broom::tidy()\n\n# A tibble: 4 × 5\n  term         estimate std.error statistic  p.value\n  &lt;chr&gt;           &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)  -2374.     648.        -3.66 0.000287\n2 avg_temp        79.4     21.3        3.74 0.000217\n3 tot_rainfall     2.05     0.663      3.10 0.00209 \n4 avg_wind        39.3     10.2        3.83 0.000151\n\n\n\nsumm &lt;- summary(mdl)\n\nsumm$adj.r.squared\n\n[1] 0.04931463\n\n\n\nsumm$fstatistic[[1]]\n\n[1] 7.190144\n\n\n\n\n\n\ndf_a &lt;- data.frame(Date=df$Date, Cases=mdl$fitted.values, Type=\"Fitted\")\ndf_b &lt;- data.frame(Date=df$Date, Cases=df$Cases, Type=\"Observed\")\n\ndf_c &lt;- dplyr::bind_rows(df_a, df_b)\n\nggplot(data = df_c) +\n    geom_line(aes(x = Date, y = Cases, colour = Type)) +\n    ggtitle(\"Observed vs Fitted\")\n\n\n\n\n\n\n\n\nplots &lt;- plot(check_model(mdl, panel = FALSE))\n\n\nplots[[6]]\n\n\n\n\n\ndf_tbl &lt;- df %&gt;% as_tsibble(index = Date) %&gt;% fill_gaps(.full = TRUE) %&gt;% fill(Cases)\n\nlibrary(patchwork)\n\nfirst_var &lt;- TRUE\nfor (v in i) {\n  if (first_var == TRUE) {\n    p &lt;- eval(parse(text = paste0(\"df_tbl %&gt;% autoplot(\",v,\")\")))\n    first_var &lt;- FALSE\n  } else {\n    p &lt;- p / eval(parse(text = paste0(\"df_tbl %&gt;% autoplot(\",v,\")\")))\n  }\n}\n\np\n\n\n\n\n\np1 &lt;- df_tbl %&gt;% autoplot(Cases)\np2 &lt;- df_tbl %&gt;% autoplot(avg_temp)\n\n\np1 / p2"
  },
  {
    "objectID": "Prototype/regression.html#linear-regression",
    "href": "Prototype/regression.html#linear-regression",
    "title": "Explanatory models",
    "section": "",
    "text": "pacman::p_load(\n  tidyverse,\n  fable,\n  tsibble,\n  feasts,\n  patchwork,\n  plotly,\n  lubridate,\n  caret,\n  performance,\n  ggstatsplot,\n  qqplotr,\n  tsibbledata\n)\n\n\ndf &lt;- read_csv(\"data/dengue_climate_joined_by_week_transformed_diff.csv\")\n\n\nmdl &lt;- lm(Cases ~ avg_temp, data = df)\n\n\n\n\ni &lt;- c(\"avg_temp\",\"tot_rainfall\",\"avg_wind\")\nj &lt;- \"\"\nfor (v in i) {\n  if (j == \"\") {\n    j &lt;- v\n  } else {\n    j &lt;- paste0(j,\"+\",v)\n  }\n}\n\nmdl &lt;- lm(as.formula(paste0(\"Cases ~ \",j)), data=df)\n\n\nsummary(mdl)\n\n\nCall:\nlm(formula = as.formula(paste0(\"Cases ~ \", j)), data = df)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-360.77 -166.33  -71.29   67.18 1497.88 \n\nCoefficients:\n               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  -2373.5890   647.8730  -3.664 0.000287 ***\navg_temp        79.4251    21.2559   3.737 0.000217 ***\ntot_rainfall     2.0540     0.6625   3.100 0.002087 ** \navg_wind        39.2656    10.2478   3.832 0.000151 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 278.9 on 355 degrees of freedom\nMultiple R-squared:  0.05728,   Adjusted R-squared:  0.04931 \nF-statistic:  7.19 on 3 and 355 DF,  p-value: 0.0001068\n\n\n\n\n\n\nggcoefstats(mdl, \n            output = \"plot\")\n\n\n\n\n\n\n\n\nmdl %&gt;% broom::tidy()\n\n# A tibble: 4 × 5\n  term         estimate std.error statistic  p.value\n  &lt;chr&gt;           &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;    &lt;dbl&gt;\n1 (Intercept)  -2374.     648.        -3.66 0.000287\n2 avg_temp        79.4     21.3        3.74 0.000217\n3 tot_rainfall     2.05     0.663      3.10 0.00209 \n4 avg_wind        39.3     10.2        3.83 0.000151\n\n\n\nsumm &lt;- summary(mdl)\n\nsumm$adj.r.squared\n\n[1] 0.04931463\n\n\n\nsumm$fstatistic[[1]]\n\n[1] 7.190144\n\n\n\n\n\n\ndf_a &lt;- data.frame(Date=df$Date, Cases=mdl$fitted.values, Type=\"Fitted\")\ndf_b &lt;- data.frame(Date=df$Date, Cases=df$Cases, Type=\"Observed\")\n\ndf_c &lt;- dplyr::bind_rows(df_a, df_b)\n\nggplot(data = df_c) +\n    geom_line(aes(x = Date, y = Cases, colour = Type)) +\n    ggtitle(\"Observed vs Fitted\")\n\n\n\n\n\n\n\n\nplots &lt;- plot(check_model(mdl, panel = FALSE))\n\n\nplots[[6]]\n\n\n\n\n\ndf_tbl &lt;- df %&gt;% as_tsibble(index = Date) %&gt;% fill_gaps(.full = TRUE) %&gt;% fill(Cases)\n\nlibrary(patchwork)\n\nfirst_var &lt;- TRUE\nfor (v in i) {\n  if (first_var == TRUE) {\n    p &lt;- eval(parse(text = paste0(\"df_tbl %&gt;% autoplot(\",v,\")\")))\n    first_var &lt;- FALSE\n  } else {\n    p &lt;- p / eval(parse(text = paste0(\"df_tbl %&gt;% autoplot(\",v,\")\")))\n  }\n}\n\np\n\n\n\n\n\np1 &lt;- df_tbl %&gt;% autoplot(Cases)\np2 &lt;- df_tbl %&gt;% autoplot(avg_temp)\n\n\np1 / p2"
  },
  {
    "objectID": "Prototype/regression.html#time-series-linear-regression",
    "href": "Prototype/regression.html#time-series-linear-regression",
    "title": "Explanatory models",
    "section": "Time Series Linear Regression",
    "text": "Time Series Linear Regression\n\n# Convert the tibble dataframe to a tsibble dataframe\ntslm_ts &lt;-  df %&gt;% dplyr::select(-c(\"Year\", \"WkNo\"))\ntslm_tbl &lt;- tslm_ts %&gt;% as_tsibble(index = Date) %&gt;% fill_gaps(.full = TRUE) %&gt;% fill(colnames(tslm_ts))\ntslm_slice &lt;- tslm_tbl\n\n\nModel Construct\n\nv = \"Cases\"\nj = \"log_tot_rainfall + log_avg_temp + log_avg_wind\"\ntslm_mdl &lt;- tslm_slice %&gt;%\n          model(TSLM(as.formula(paste0(v,\" ~ \",j))))\n\nreport(tslm_mdl)\n\nSeries: Cases \nModel: TSLM \n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-352.58 -166.61  -61.20   65.55 1476.41 \n\nCoefficients:\n                 Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      -7081.58    1908.02  -3.711 0.000239 ***\nlog_tot_rainfall    60.53      17.88   3.386 0.000789 ***\nlog_avg_temp      1823.67     540.58   3.374 0.000824 ***\nlog_avg_wind       451.40     105.16   4.293 2.28e-05 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 277.3 on 356 degrees of freedom\nMultiple R-squared: 0.06569,    Adjusted R-squared: 0.05781\nF-statistic: 8.343 on 3 and 356 DF, p-value: 2.2448e-05\n\n\n\n\nModel Metrics\n\ntslm_mdl %&gt;%\n  accuracy()\n\n# A tibble: 1 × 10\n  .model               .type        ME  RMSE   MAE   MPE  MAPE  MASE RMSSE  ACF1\n  &lt;chr&gt;                &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 \"TSLM(as.formula(pa… Trai… -1.65e-14  276.  180. -125.  152.  4.74  4.42 0.943\n\n\n\n\nModel Residuals\n\ngg_tsresiduals(tslm_mdl)\n\n\n\n\n\n\nModel Coeff plot\n\nggcoefstats(tslm_mdl %&gt;% tidy(), \n            output = \"plot\")\n\n\n\n\n\ntslm_mdl %&gt;% tidy()\n\n# A tibble: 4 × 6\n  .model                              term  estimate std.error statistic p.value\n  &lt;chr&gt;                               &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 \"TSLM(as.formula(paste0(v, \\\" ~ \\\"… (Int…  -7082.     1908.      -3.71 2.39e-4\n2 \"TSLM(as.formula(paste0(v, \\\" ~ \\\"… log_…     60.5      17.9      3.39 7.89e-4\n3 \"TSLM(as.formula(paste0(v, \\\" ~ \\\"… log_…   1824.      541.       3.37 8.24e-4\n4 \"TSLM(as.formula(paste0(v, \\\" ~ \\\"… log_…    451.      105.       4.29 2.28e-5\n\n\n\n\nModel AVP\n\nvar_fitted &lt;- fitted(tslm_mdl)[,2:3] %&gt;% \n  as_tibble() %&gt;% \n  rename(Cases=.fitted)\n\nvar_fitted$Type &lt;- \"Fit\"\n\ntslm_slice$Type &lt;- \"Observed\"\n\nvar_avp &lt;- dplyr::bind_rows(var_fitted, tslm_slice)\n\n\nggplot(data = var_avp) +\n  geom_line(aes(x = Date, y = Cases, colour = Type)) +\n  ggtitle(\"Observed vs Fitted\")"
  },
  {
    "objectID": "Prototype/forecast.html",
    "href": "Prototype/forecast.html",
    "title": "Time Series Forecasting",
    "section": "",
    "text": "pacman::p_load(\n  shiny,\n  tidyverse,\n  fable,\n  tsibble,\n  feasts,\n  patchwork,\n  ggstatsplot,\n  MLmetrics,\n  performance,\n  caret,\n  qqplotr,\n  lubridate,\n  ggthemes, \n  sf, \n  terra, \n  gstat, \n  automap, \n  tmap, \n  viridis, \n  zoo,\n  rstantools,\n  urca\n)"
  },
  {
    "objectID": "Prototype/forecast.html#arima",
    "href": "Prototype/forecast.html#arima",
    "title": "Time Series Forecasting",
    "section": "ARIMA",
    "text": "ARIMA\n\nData Preparation\n\narima_ts &lt;-  df %&gt;% dplyr::select(Date, Cases)\narima_tbl &lt;- arima_ts %&gt;% as_tsibble(index = Date) %&gt;% fill_gaps(.full = TRUE) %&gt;% fill(Cases)\n\n\n\nModel\n\narima_mdl &lt;- arima_tbl %&gt;% \n  model('arima' = ARIMA(Cases))\n\n\n\nResidual\n\narima_mdl %&gt;% gg_tsresiduals()\n\n\n\n\n\n\nExtracting params\n\na &lt;- capture.output(report(arima_mdl))\nc &lt;- \"\"\nfor (b in a) {\n  c &lt;- paste0(c,b,\"\\n\")\n}\nparams &lt;- gsub(\"[\\\\(\\\\)]\", \"\", regmatches(c, gregexpr(\"\\\\(.*?\\\\)\", c))[[1]])\nparams &lt;- as.list(strsplit(params, ',')[[1]])\nparams[[2]]\n\n[1] \"1\"\n\n\n\n\nAutocorrelation\n\narima_tbl %&gt;% gg_tsdisplay(difference(Cases,1), plot_type = 'partial')\n\n\n\n\n\n\nActual vs Predicted\n\narima_fitted &lt;- fitted(arima_mdl)[,2:3] %&gt;% \n  as_tibble() %&gt;% \n  rename(Cases=.fitted)\n\narima_fitted$Type &lt;- \"Fit\"\n\narima_tbl$Type &lt;- \"Observed\"\n\narima_avp &lt;- dplyr::bind_rows(arima_fitted, arima_tbl)\n\n\nggplot(data = arima_avp) +\n  geom_line(aes(x = Date, y = Cases, colour = Type)) +\n  ggtitle(\"Observed vs Fitted\")\n\n\n\n\n\n\nModel Metrics\n\narima_cv &lt;- arima_tbl %&gt;%\n  stretch_tsibble(.init = 200, .step = 10) \n\n\narima_cv_metrics &lt;- arima_cv %&gt;%\n  model(ARIMA(Cases)) %&gt;%\n  forecast(h = 1) %&gt;%\n  accuracy(arima_tbl)\n\n\narima_train_metrics &lt;- arima_mdl %&gt;%\n  accuracy()\n\n\narima_cv_metrics[c(\"RMSE\",\"MAE\",\"MAPE\")]\n\n# A tibble: 1 × 3\n   RMSE   MAE  MAPE\n  &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1  51.3  30.5  17.0\n\n\n\n\nForecast\n\narima_mdl %&gt;%\n  forecast(h = 26) %&gt;%\n  autoplot(arima_tbl)\n\n\n\n\n\nresults &lt;- arima_mdl %&gt;%\n  forecast(h = 26)\n\nresults &lt;- results[-c(1,3)]\ncolnames(results) &lt;- c(\"Date\", \"Forecast\")\n\nresults\n\n# A tsibble: 26 x 2 [7D]\n   Date       Forecast\n   &lt;date&gt;        &lt;dbl&gt;\n 1 2020-11-30    225. \n 2 2020-12-07    168. \n 3 2020-12-14    120. \n 4 2020-12-21     79.8\n 5 2020-12-28     52.5\n 6 2021-01-04     38.3\n 7 2021-01-11     35.9\n 8 2021-01-18     42.8\n 9 2021-01-25     55.8\n10 2021-02-01     71.6\n# ℹ 16 more rows"
  },
  {
    "objectID": "Prototype/forecast.html#exponential-smoothing",
    "href": "Prototype/forecast.html#exponential-smoothing",
    "title": "Time Series Forecasting",
    "section": "Exponential Smoothing",
    "text": "Exponential Smoothing\n\nData Preparation\n\nets_ts &lt;-  df %&gt;% dplyr::select(Date, Cases)\nets_tbl &lt;- ets_ts %&gt;% as_tsibble(index = Date) %&gt;% fill_gaps(.full = TRUE) %&gt;% fill(Cases)\n\n\n\nModel\n\nets_mdl &lt;- ets_tbl %&gt;%\n  model(ETS(Cases))\n\nreport(ets_mdl)\n\nSeries: Cases \nModel: ETS(M,A,N) \n  Smoothing parameters:\n    alpha = 0.8319707 \n    beta  = 0.0001000477 \n\n  Initial states:\n     l[0]   b[0]\n 482.8724 2.7354\n\n  sigma^2:  0.0369\n\n     AIC     AICc      BIC \n4694.026 4694.195 4713.456 \n\n\n\n\nExtracting Params\n\na &lt;- capture.output(report(ets_mdl))\npara1 &lt;- \"\"\npara2 &lt;- \"\"\npara3 &lt;- \"\"\nc &lt;- \"\"\nfor (b in a) {\n  if (grepl(\"alpha\", b)) {\n    para1 &lt;- as.list(strsplit(b, ' = ')[[1]])\n    para1 &lt;- trimws(para1[[2]])\n  }\n  if (grepl(\"beta\", b)) {\n    para2 &lt;- as.list(strsplit(b, ' = ')[[1]])\n    para2 &lt;- trimws(para2[[2]])\n  }\n  if (grepl(\"gamma\", b)) {\n    para3 &lt;- as.list(strsplit(b, ' = ')[[1]])\n    para3 &lt;- trimws(para3[[2]])\n  }\n  c &lt;- paste0(c,b,\"\\n\")\n}\nparams &lt;- gsub(\"[\\\\(\\\\)]\", \"\", regmatches(c, gregexpr(\"\\\\(.*?\\\\)\", c))[[1]])\nparams &lt;- as.list(strsplit(params, ',')[[1]])\npara4 &lt;- params[[1]]\npara5 &lt;- params[[2]]\npara6 &lt;- params[[3]]\n\n\n\nDecomposition\n\ncomponents(ets_mdl) %&gt;%\n  autoplot() +\n  labs(title = \"Exponential Smoothing Components\")\n\n\n\n\n\n\nActual vs Predicted\n\nets_fitted &lt;- fitted(ets_mdl)[,2:3] %&gt;% \n  as_tibble() %&gt;% \n  rename(Cases=.fitted)\n\nets_fitted$Type &lt;- \"Fit\"\n\nets_tbl$Type &lt;- \"Observed\"\n\nets_avp &lt;- dplyr::bind_rows(ets_fitted, ets_tbl)\n\n\nggplot(data = ets_avp) +\n  geom_line(aes(x = Date, y = Cases, colour = Type)) +\n  ggtitle(\"Observed vs Fitted\")\n\n\n\n\n\n\nModel Metrics\n\nets_cv &lt;- ets_tbl %&gt;%\n  stretch_tsibble(.init = 200, .step = 10) \n\n\nets_cv_metrics &lt;- ets_cv %&gt;%\n  model(ARIMA(Cases)) %&gt;%\n  forecast(h = 1) %&gt;%\n  accuracy(ets_tbl)\n\n\nets_train_metrics &lt;- ets_mdl %&gt;%\n  accuracy()\n\n\nets_cv_metrics$MAPE\n\n[1] 16.97937\n\n\n\n\nForecast\n\nets_mdl %&gt;%\n  forecast(h = 26) %&gt;%\n  autoplot(ets_tbl)"
  },
  {
    "objectID": "Prototype/forecast.html#var",
    "href": "Prototype/forecast.html#var",
    "title": "Time Series Forecasting",
    "section": "VAR",
    "text": "VAR\n\nData Preparation\n\nvar_ts &lt;-  df %&gt;% dplyr::select(-c(\"Year\", \"WkNo\"))\nvar_tbl &lt;- var_ts %&gt;% as_tsibble(index = Date) %&gt;% fill_gaps(.full = TRUE) %&gt;% fill(colnames(var_ts))\n\n\n\nModel Construct\n\ni &lt;- c(\"avg_temp, avg_rainfall\")\nv &lt;- \"Cases\"\nmode &lt;- '\"aicc\"'\n\nfor (s in i) {\n  v &lt;- paste0(v,\",\",s)\n}\n\nstrr &lt;- paste0('var_tbl %&gt;% model(',mode,' = VAR(vars(',v,'), ic=',mode,'))')\n\nvar_mdl &lt;- eval(parse(text = strr))\n\n\n\nAutocorrelation\n\nvar_mdl |&gt;\n  augment() |&gt;\n  ACF() |&gt;\n  autoplot()\n\n\n\n\n\n\nActual vs Predicted\n\nvar_fitted &lt;- fitted(var_mdl)[,2:3] %&gt;% \n  as_tibble() #%&gt;% \n  #rename(Cases=.fitted)\n\nvar_fitted$Type &lt;- \"Fit\"\n\nvar_tbl$Type &lt;- \"Observed\"\n\nvar_avp &lt;- dplyr::bind_rows(var_fitted, var_tbl)\n\n\nggplot(data = var_avp) +\n  geom_line(aes(x = Date, y = Cases, colour = Type)) +\n  ggtitle(\"Observed vs Fitted\")\n\n\n\n\n\n\nModel Metrics\n\nvar_cv &lt;- var_tbl %&gt;%\n  stretch_tsibble(.init = 200, .step = 10) \n\n\nvar_cv_metrics &lt;- var_cv %&gt;%\n  model(\n    aicc = VAR(vars(Cases))\n    ) %&gt;%\n  forecast(h = 1) %&gt;%\n  accuracy(var_tbl)\n\n\nvar_cv_metrics\n\n# A tibble: 1 × 10\n  .model .type    ME  RMSE   MAE   MPE  MAPE  MASE RMSSE  ACF1\n  &lt;chr&gt;  &lt;chr&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 aicc   Test   6.02  51.3  30.7 -13.1  21.0 0.808 0.824 0.207\n\n\n\n\nForecast\n\nfc &lt;- var_mdl %&gt;% \n  forecast(h = 26)\n\nfc %&gt;% autoplot(var_tbl)\n\n\n\n\n\nci &lt;- hilo(fc)\n\n\nv &lt;- \"avg_rainfall\"\n\nvar_fc &lt;- data.frame(Date=fc$Date, \n                     temp=fc$.mean[,v],\n                     lwr80=ci$`80%`[[v]]$lower,\n                     upr80=ci$`80%`[[v]]$upper,\n                     lwr95=ci$`95%`[[v]]$lower,\n                     upr95=ci$`95%`[[v]]$upper,\n                     Type=\"Forecast\")\n\ncolnames(var_fc)[2] &lt;- v\n\nvar_obs &lt;- data.frame(Date=var_tbl$Date, \n                      temp=var_tbl[v],\n                      lwr80=NA,\n                      upr80=NA,\n                      lwr95=NA,\n                      upr95=NA,\n                      Type=\"Observed\")\n\nvar_plot &lt;- dplyr::bind_rows(var_obs, var_fc)\n\n\nggplot(data = var_plot, aes(x=Date, y=.data[[v]] ,colour=Type)) + \n  geom_line() +\n  geom_ribbon(aes(ymin=lwr80, ymax=upr80), alpha=0.2, linetype=0, fill=\"blue\") +\n  geom_ribbon(aes(ymin=lwr95, ymax=upr95), alpha=0.1, linetype=0, fill=\"blue\") + \n  scale_colour_manual(values = c(\"Observed\"=\"black\", \"Forecast\"=\"blue\")) +\n  ggtitle(paste0(\"Forecast \",v,\" for next n periods\"))\n\n\n\n\n\n\nCoeffs\n\nggcoefstats(var_mdl %&gt;% broom::tidy())"
  },
  {
    "objectID": "Prototype/data/geospatial/MPSZ-2019.html",
    "href": "Prototype/data/geospatial/MPSZ-2019.html",
    "title": "ISSS608 Group 3 - Analysis of Climate Impact on Dengue",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false    \n\n\n\n Back to top"
  },
  {
    "objectID": "Project_prototype/data/MPSZ-2019.html",
    "href": "Project_prototype/data/MPSZ-2019.html",
    "title": "ISSS608 Group 3 - Analysis of Climate Impact on Dengue",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false    \n\n\n\n Back to top"
  },
  {
    "objectID": "Poster/Poster.html",
    "href": "Poster/Poster.html",
    "title": "Project Poster",
    "section": "",
    "text": "Click here to view the original poster\n\n\n\n Back to top"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Meeting_Minute/Meeting_Minute.html",
    "href": "Meeting_Minute/Meeting_Minute.html",
    "title": "Project Meeting Minutes",
    "section": "",
    "text": "This document records the minutes of our project meetings.\nProject Member:"
  },
  {
    "objectID": "Meeting_Minute/Meeting_Minute.html#meeting-01",
    "href": "Meeting_Minute/Meeting_Minute.html#meeting-01",
    "title": "Project Meeting Minutes",
    "section": "2024-02-07 Meeting 01",
    "text": "2024-02-07 Meeting 01\nDate: 07 Feb 2024, 7:30pm\nPresent:\n\nColin\nYiping\nCi Hui\n\nAbsent:\n\nNone\n\n\nAgenda\n\nDiscuss project idea\nRoles allocation\nDetermine timeline\n\n\n\nProject Idea\nColin and Yiping suggested going with weather data provided by Prof Kam earlier in class. Below are some of the aspects that can be explored with that dataset.\nSingapore Climate\nData: Meteorological Service Singapore daily weather data\nEDA:\n\nVisualize changes in weather conditions in Singapore over past few years.\nVisualize factors contributing to climate change (need more data for other sources)\nVisualize impacts of climate change (need more data for other sources)\n\nRshiny:\n\nForecast temperature/rainfall with time-series analysis\nPredict temperature using attribution modelling or other machine learning techniques like random forest/gradient boosting\n\nHDB Pricing\nData: HDB, Singstats\nEDA:\n\nVisualize historical patterns in HDB prices\nVisualize differences in prices by region and time\n\nRshiny:\n\nPredict prices of HDB given some known factors\n\nAll 3 agreed to go with weather data for our project. The actual scope will be decided in later meetings. We will start the following 2 in proposal and add/remove after consult with prof.\nEDA: Visualize changes in weather conditions in Singapore over past few years by region and time\nRshiny: Forecast temperature/rainfall with time-series analysis\n\n\nRoles Allocation\nColin will start early with web layout. More time is needed here as we are all beginners at html/css/js. Also will create git repo and host on Netlify.\nCi Hui and Yiping will work on drafting the proposal for submission on 11 Feb. We aim to finish by 9th Feb so that we can enjoy our CNY break.\nProposal will be shared in teams shared folder where multiple users can edit the .doc at the same time instead of editing in .qmd which requires multiple branching, pulling and pushing on Git. Once done, it will be copied over to a .qmd file by colin who will push the final proposal to origin.\n\n\nTimeline\nWe discussed about the timeline using an excel sheet. Here is the final screenshot:\n\n\n\n\n\n\n\nAgenda for next meeting\n\nFinalize project idea (should be after prof consult)\nModels to deploy on Shiny App (by now, we should all have finish Shiny app tutorials)\nWebsite layout improvements\n\n\n\nAdjournment\nMeeting ended at 8:10pm. Next meeting on 13th February, 8:00pm (Tentative) online."
  },
  {
    "objectID": "Meeting_Minute/Meeting_Minute.html#meeting-02",
    "href": "Meeting_Minute/Meeting_Minute.html#meeting-02",
    "title": "Project Meeting Minutes",
    "section": "2024-02-20 Meeting 02",
    "text": "2024-02-20 Meeting 02\nDate: 20 Feb 2024, 11:00am\nPresent:\n\nColin\nYiping\nProf Kam\n\nAbsent:\n\nCi Hui\n\n\nAgenda\n\nFinalize project idea (should be after prof consult)\nFeedback on proposal\nOther advice\n\n\n\nFinalize Project Ideas\nWe decided to go with the visualization of Singapore’s weather on Dengue cases.\nTime Series Econometric model\n\nProf has approved our approach to use time series econometric model to forecast the future temperature. In the real-world application, the researchers would also use satellite image data to forecast the future weather. However, this requires additional data and specific knowledge to interpret the satellite images. Hence, we’ll keep the project scope simple by just using the data downloaded from the website.\nMeanwhile, prof has reminded us to check the data source carefully before downloading.\n\nCorrelation Study between Weather and Dengue Cases\n\nAs dengue clusters are often isolated to regions with outbreaks, Prof had advised that we look at dengue cases on a national and weekly level. Climate data used will hence also be at the national level, aggregated across all regions in Singapore.\nIn addition, prof suggested that we can use an explanatory model to study the impact of temperature and rainfall on dengue cases. For example, would dengue cases increase when rainfall increases?\n\n\n\nFeedback on Proposal\nCDA\n\nOur idea of CDA in the proposal is incorrect. MAPE and RMSE are measures to check accuracy of model, and are not what CDA is about.\n\nDashboard in ShinyApp\n\nThis is not the focus of the ShinyApp. ShinyApp should focus more on Applications.\n\n\n\nOther advice\n\nProf also shared another potential project idea which is to calibrate a model to interpolate the rainfall at the area without rainfall station. There are a total of 27 rainfall stations in Singapore, but it’s challenging to predict the rainfall at the area outside the rainfall station’s coverage.\nHowever, this requires the knowledge of geospatial interpolation. Hence, we’ll not go into this area for this project\n\n\n\nAgenda for next meeting\n\nData preparations\nModel finalization\n\n\n\nAdjournment\nMeeting ended at 11:40am. Next meeting on 24th February, 4:00pm (Tentative) after class."
  },
  {
    "objectID": "Meeting_Minute/Meeting_Minute.html#meeting-03",
    "href": "Meeting_Minute/Meeting_Minute.html#meeting-03",
    "title": "Project Meeting Minutes",
    "section": "2024-03-09 Meeting 03",
    "text": "2024-03-09 Meeting 03\nDate: 9 Mar 2024, 3:40pm\nPresent:\n\nColin\nYiping\nCi Hui\n\nAbsent:\n\nNone\n\n\nAgenda\n\nShiny App modules\n\n\n\nShiny App Modules\nModules has been decided and split among us via whatsapp. This lists the final details of the modules we are working on as part of Take-home_Ex04.\nEDA\n\nCi Hui will be working on EDA\nEDA will consist of both climate and dengue data\nEDA will allow users to view distribution of data, and compare across years and stations\n\nExplanatory Model\n\nYi Ping will be working on the Explanatory model\nModel will be linear regression, with dengue cases as the explained variable, and climate as the explanatory variables\nUsers can decide which variables to include in the model\nResults will show model metrics such as accuracy, as well as variable importance\n\nTime series forecast\n\nColin will be working on the time series forecast\nModel will be Holt Winters\nUsers will be able to choose which climate variable to forecast, and from which whether station. In addition, users will be able to define the time range, train-test split, as well as other tuning parameters\nResults will show forecasted values in a plot, with confidence interval\n\n\n\nAgenda for next meeting\n\nShiny App progress\nWebsite progress\nBegin Poster discussions\n\n\n\nAdjournment\nMeeting ended at 4:30am. Next meeting on 16th March, 3:30pm (Tentative) after class."
  },
  {
    "objectID": "Meeting_Minute/Meeting_Minute.html#meeting-04",
    "href": "Meeting_Minute/Meeting_Minute.html#meeting-04",
    "title": "Project Meeting Minutes",
    "section": "2024-03-16 Meeting 04",
    "text": "2024-03-16 Meeting 04\nDate: 16 Mar 2024, 3:50pm\nPresent:\n\nColin\nYiping\nCi Hui\n\nAbsent:\n\nNone\n\n\nAgenda\n\nShiny App modules\nProject poster\n\n\n\nShiny App Modules\nModules has been decided and split among us via whatsapp. This lists the final details of the modules we are working on for the group Shiny app.\nEDA\n\nCi Hui has made some plots to discover the trends in the weather data such as cycle plots and geospacial graphs\nMore charts will be added to review the relation between weather data and dengue data\n\nFeature Selection\nCorrelation study\n\nCi Hui shared the correlation matrix she made for the weather data\nCorrelation between weather and dengue cases will be added\n\nExplanatory Model\n\nYi Ping shared that the explanatory model has been calibrated, but the adjusted R^2 is low (~ 3%) which indicates that weather data alone is not enough to explain the dengue cases\nTransformation did help to bring the adjusted R^2 from ~2% to ~3%\nUsers will be able to choose which transformation they want to apply, i.e. log transformation, min-max transformation and standardization\nYi Ping will plot the variable coefficients in a graph so the users can view them visually\n\nTime series forecast\n\nColin will be working on a multivariate forecast model, using the forecasted weather data to predict the dengue cases\nThe timeseries packages shared by prof in class is very helpful, and Colin will update the codes using those recommended packages and graphs\n\nCi Hui and Yi Ping will share the data sets and codes with Colin to test the Shiny app.\n\n\nProject Poster\nWe will start to work on the poster by referencing to the work from the course seniors. The content written for the sections (i.e. introduction, methodology, tools) can be also displayed in the Shiny app.\n\n\nAgenda for next meeting\n\nShiny App progress\nPoster draft design\n\n\n\nAdjournment\nMeeting ended at 4:30pm. Next meeting on 23rd March, 3:30pm (Tentative) after class."
  },
  {
    "objectID": "Meeting_Minute/Meeting_Minute.html#meeting-05",
    "href": "Meeting_Minute/Meeting_Minute.html#meeting-05",
    "title": "Project Meeting Minutes",
    "section": "2024-03-23 Meeting 05",
    "text": "2024-03-23 Meeting 05\nDate: 23 Mar 2024, 3:40pm\nPresent:\n\nColin\nYiping\nCi Hui\n\nAbsent:\n\nNone\n\n\nAgenda\n\nFinalize Shiny App modules\nProject poster\n\n\n\nShiny App Modules\nTeam has discussed the content for the Shiny App after receiving the feedback from prof.\nEDA\n\nTeam has discussed the purpose of the ANOVA plots that it’s useful to check if there are any significant changes in temperature, wind and rainfall across the years\nCi Hui shared that prof has suggested the analysis on geospatial interpolation.\nCi Hui will search online and try to implement that in the app\n\nFeature Selection\nCorrelation study\n\nProf feedbacked that the correlation analysis we did is not suitable for time series data\nTeam discussed to drop this analysis for this submission due to the interest of time\n\nExplanatory Model\n\nYiping shared the feedback from prof that linear regression is not suitable for time series data\nYiping will study the links suggested by prof, and implement time series linear regression in the app\n\nTime series forecast\n\nColin has shared the progress of the models after changing to the time series packages shared by prof last week\n\nCi Hui and Yiping will share the revised codes to Colin by Monday. Colin will come out with the first draft by Friday.\n\n\nProject Poster\n\nCi Hui and Yiping shared the design of the project poster\nThere will be 9 sections in the poster\nCi Hui will work on\n\nIntroduction\nObjective\nTools & methodology\nFuture work\n\nYiping will work on\n\nData preparation\nData exploration\nFeature importance\nTime series forecast\nInsights\n\n\n\n\nAgenda for next meeting\n\nTeam agreed that this is our last F2F meeting\nWhatsApp group will be used as the main communication channel\nTeams meeting will be conducted if necessary\n\n\n\nAdjournment\nAs and when it’s necessary until the submission deadline"
  },
  {
    "objectID": "Project_prototype/data/geospatial/MPSZ-2019.html",
    "href": "Project_prototype/data/geospatial/MPSZ-2019.html",
    "title": "ISSS608 Group 3 - Analysis of Climate Impact on Dengue",
    "section": "",
    "text": "&lt;!DOCTYPE qgis PUBLIC ‘http://mrcc.com/qgis.dtd’ ‘SYSTEM’&gt;     dataset\n\n\n        0 0     false    \n\n\n\n Back to top"
  },
  {
    "objectID": "Proposal/Proposal.html#exploratory-data-analysis-eda",
    "href": "Proposal/Proposal.html#exploratory-data-analysis-eda",
    "title": "Project Proposal",
    "section": "Exploratory Data Analysis (EDA)",
    "text": "Exploratory Data Analysis (EDA)\nAs a standard procedure of a data analytics project, EDA will be performed to understand the trend and patterns in the data before developing our forecast models.\n\nUnderstanding the weather time series data (rainfall, temperature, relative humidity and wind) by decomposing them to study their trend, seasonality and stationarity.\nGeographical analysis to study the differences of weather by region and planning area in Singapore.\nCorrelation analysis to study the association among rainfall, temperature, relative humidity and wind.\nCorrelation analysis to study the association among rainfall, temperature and dengue cases."
  },
  {
    "objectID": "Proposal/Proposal.html#forecast-model-development",
    "href": "Proposal/Proposal.html#forecast-model-development",
    "title": "Project Proposal",
    "section": "Forecast Model Development",
    "text": "Forecast Model Development\nDifferent time series forecast models will be attempted to compare their performance, which are:\n\nSimple moving average method which is a part of the simple time series forecast model family. It will act as the reference model to be compared with more advanced models.\nHolt Winter’s method which employs exponential smoothing techniques that applies a higher weightage to the more recent data. The underlying assumption here is that the weather in the recent years would be more valuable in forecasting the future weather.\nSeasonal auto regressive integrated moving average (SARIMA) which extends auto regressive integrated moving average (ARIMA) methods by adding the seasonality component. The underlying assumption here is that weather exhibits seasonality trend. Thus, SARIMA method would be more suitable for weather forecasting."
  },
  {
    "objectID": "Proposal/Proposal.html#confirmatory-data-analysis-cda",
    "href": "Proposal/Proposal.html#confirmatory-data-analysis-cda",
    "title": "Project Proposal",
    "section": "Confirmatory Data Analysis (CDA)",
    "text": "Confirmatory Data Analysis (CDA)\nTo evaluate the models’ performance and identify the champion model after developing the above-mentioned models, we’ll use the following two commonly used performance metrics:\n\nRoot mean squared error (RMSE) which is the square root of mean squared error (MSE). It measures how far the forecasted values are deviated from the actual measurements.\n\nMean absolute percentage error (MAPE) which measures the percentage error against the actual measurements. It’s largely adopted because it’s normalized in percentage form, which many people find it easier to interpret and compare among different methods."
  },
  {
    "objectID": "Proposal/Proposal.html#dashboard",
    "href": "Proposal/Proposal.html#dashboard",
    "title": "Project Proposal",
    "section": "Dashboard",
    "text": "Dashboard\n\nOverall\nThe dashboard layout is further divided into 3 (or 4) sections; Temperature, Rainfall, Wind (and relative humidity, which may be a composite factor of temperature and rain).\nWe intend for users to be able to filter by multiple levels as indicated below:\n\nBy time period – slider bar\nBy min/max/mean – checkbox (only choose 1)\nBy day/month/year - checkbox (only choose 1)\n\nIf time permit, we will add animations to the map which shows the gradual change in temp/rain/wind over time across the different regions.\n\n\n\n\n\n\n\nTrend\nTo give users a clearer view of changes over time, the Trend tab utilizes a parallel coordinate map that shows temp/rain/wind against time. Here, each line (and color) represents a different weather station. We can also added the vertical histograms that shows the distribution as well as the outliers.\n\n\n\n\n\n\n\nClimate Impact\nIn this section, the users will be able to visualize the correlation between temp/rain and dengue cases. Those who are in the public health sector can make use of this information to develop better strategies to prevent dengue outbreak."
  },
  {
    "objectID": "Proposal/Proposal.html#forecast",
    "href": "Proposal/Proposal.html#forecast",
    "title": "Project Proposal",
    "section": "Forecast",
    "text": "Forecast\nIn the forecast tab, users will be able to run models to predict temp/rain/wind changes.\nHere, the users will be able to choose from a selection of the models mentioned in the previous section, and define the parameters associated with that model before running the model.\n\n\n\n\n\nFinally, we will include a tab for CDA to evaluate the performance of the trained model."
  },
  {
    "objectID": "Prototype/eda.html",
    "href": "Prototype/eda.html",
    "title": "Exploratory Data Analysis",
    "section": "",
    "text": "1 Installing and launching the required R packages\n\npacman::p_load(tidyverse, ggstatsplot, sf, terra, gstat, tmap, rstantools)\n\n\n\n2 Importing the data\n\nclimate_data &lt;- read_csv(\"data/clean_climate_data.csv\")\n\n\nstationList &lt;- unique(climate_data$Station)\n\n\n\n3 Oneway ANOVA Test\n\n#Inputs for prototyping\ninput_station &lt;- \"Changi\"\ninput_msmt &lt;- \"mean_temp\"\nstart_year &lt;- 2018\nend_year &lt;- 2020\ninput_year &lt;- seq(start_year, end_year)\n\ninput_data &lt;- climate_data %&gt;%\n  select('Station','Year','Month','Day',input_msmt)%&gt;%\n  filter(Station == input_station,\n         Year %in% input_year)\n\nggbetweenstats(\n  data = input_data,\n  x = Year, \n  y = !!rlang::sym(input_msmt),\n  type = \"p\",\n  mean.ci = TRUE, \n  pairwise.comparisons = TRUE, \n  pairwise.display = \"s\",\n  p.adjust.method = \"fdr\",\n  messages = FALSE\n)\n\n\n\n\nThe UI\n\n\n\n4 Spatial Interpolation\n\n#Importing the station data\nstations &lt;- read_csv(\"data/RainfallStation.csv\")\n\n#Inputs for prototyping\ninput_year &lt;- 2023\ninput_msmt &lt;- \"daily_rainfall\"\ninput_agg &lt;- \"sum\"\n\n#Preparing the input data\ninput_data &lt;- climate_data %&gt;%\n  select('Station','Year','Month','Day',input_msmt)%&gt;%\n  filter(Year == input_year)\n\nrfdata &lt;- input_data%&gt;%\n  select(c(1,5))%&gt;%\n  group_by(Station)%&gt;%\n  summarise(year_agg = switch(input_agg,\n                              sum = sum(!!rlang::sym(input_msmt)),\n                              mean = mean(!!rlang::sym(input_msmt))\n                              ))%&gt;%\n  mutate(\n    year_agg = ifelse(is.na(year_agg), 0, year_agg)\n  )%&gt;%\n  ungroup()\n\n#Converting aspatial data into geospatial data\nrfdata &lt;- rfdata %&gt;%\n  left_join(stations)\n\nrfdata_sf&lt;- st_as_sf(rfdata,\n                     coords = c(\"Longitude\", \"Latitude\"),\n                     crs = 4326)%&gt;%\n  st_transform(crs = 3414)\n\n#Importing planning subzone boundary data\nmpsz2019 &lt;- st_read(dsn = \"data/geospatial\", layer = \"MPSZ-2019\")%&gt;%\n  st_transform(crs = 3414)\n\nReading layer `MPSZ-2019' from data source \n  `C:\\colinjkl\\ISSS608-VAA_Project\\Prototype\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\nInverse Distance Weighted\n\n#Inputs for prototyping\ninput_nmax &lt;- 3\n\nreso &lt;- 200\nnr &lt;- reso\nnc &lt;- reso * 1.557971\n\ngrid &lt;- terra::rast(mpsz2019, \n                    nrows = nr, \n                    ncols = nc)\n\nxy &lt;- terra::xyFromCell(grid, \n                        1:ncell(grid))\n\ncoop &lt;- st_as_sf(as.data.frame(xy), \n                 coords = c(\"x\", \"y\"),\n                 crs = st_crs(mpsz2019))\ncoop &lt;- st_filter(coop, mpsz2019)\n\nres &lt;- gstat(formula = year_agg ~ 1, \n             locations = rfdata_sf, \n             nmax = input_nmax,\n             set = list(idp = 0))\n\nresp &lt;- predict(res, coop)\n\n[inverse distance weighted interpolation]\n\nresp$x &lt;- st_coordinates(resp)[,1]\nresp$y &lt;- st_coordinates(resp)[,2]\nresp$pred &lt;- resp$var1.pred\n\npred &lt;- terra::rasterize(resp, grid, \n                         field = \"pred\", \n                         fun = \"mean\")\n\ntmap_options(check.and.fix = TRUE)\ntmap_mode(\"plot\")\ntm_shape(pred) + \n  tm_raster(alpha = 0.6, \n            palette = \"viridis\")\n\n\n\n\nKriging\n\nv &lt;- variogram(year_agg ~ 1, \n               data = rfdata_sf)\nplot(v)\n\n\n\n\n\n#Inputs for prototyping\ninput_model &lt;- \"Sph\"\ninput_psill &lt;- 0.5\ninput_range &lt;- 5000\ninput_nugget &lt;- 0.1\n\nfv &lt;- fit.variogram(object = v,\n                    model = vgm(\n                      psill = input_psill, \n                      model = input_model,\n                      range = input_range,  \n                      nugget = input_nugget))\n\nk &lt;- gstat(formula = year_agg ~ 1, \n           data = rfdata_sf, \n           model = fv)\n\nresp &lt;- predict(k, coop)\n\n[using ordinary kriging]\n\nresp$x &lt;- st_coordinates(resp)[,1]\nresp$y &lt;- st_coordinates(resp)[,2]\nresp$pred &lt;- resp$var1.pred\nresp$pred &lt;- resp$pred\n\nkpred &lt;- terra::rasterize(resp, grid, \n                         field = \"pred\")\n\ntmap_options(check.and.fix = TRUE)\ntmap_mode(\"plot\")\ntm_shape(kpred) + \n  tm_raster(alpha = 0.6, \n            palette = \"viridis\",\n            title = \"Total yearly rainfall (mm)\") +\n  tm_layout(main.title = \"Distribution of yearly rainfall\",\n            main.title.position = \"center\",\n            main.title.size = 1.2,\n            legend.height = 0.45, \n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar() +\n  tm_grid(alpha =0.2)\n\n\n\n\nThe UI\nThe user select all required values from the first panel and click on the button. If IDW is selected, the user can change the model parameter nmax value to generate different surface map. If Kriging is selected, a empirical variogram will be shown, and the user can decide the model parameters - psill, model, range, nugget according to the variogram shown.\n\n\n\n\n5 Correlation\n\n#Inputs for prototyping\ninput1 &lt;- \"mean_temp\"\ninput2 &lt;- \"daily_rainfall\"\ninput3 &lt;- \"mean_wind\"\n\ncor_data &lt;- climate_data %&gt;%\n  select(input1, input2, input3)\n\ncor_data &lt;- na.omit(cor_data)\n\nggstatsplot::ggcorrmat(\n  data = cor_data, \n  cor.vars = 1:ncol(cor_data))\n\n\n\n\nThe UI\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Prototype/Prototype.html",
    "href": "Prototype/Prototype.html",
    "title": "Prototype",
    "section": "",
    "text": "Take a moment to revisit the journey of our Shiny App development\n\n\n\n\n\n\n\nTable of content\n\n\n\n\n\n  \n\n\n\n\nExploratory Data Analysis\n\n\n\n\n\nPreliminary exploration of the dengue and climate data sets\n\n\n\n\n\n\nMar 17, 2024\n\n\n\n\n\n\n  \n\n\n\n\nExplanatory models\n\n\n\n\n\nHow much of Dengue is explained by Climate?\n\n\n\n\n\n\nMar 17, 2024\n\n\n\n\n\n\n  \n\n\n\n\nTime Series Forecasting\n\n\n\n\n\nForecasting Dengue Cases using various models\n\n\n\n\n\n\nMar 9, 2024\n\n\n\n\n\n\nNo matching items\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Prototype/Take-home_Ex04_2014_ts-regression.html",
    "href": "Prototype/Take-home_Ex04_2014_ts-regression.html",
    "title": "Take-home_Ex04_ts-regression",
    "section": "",
    "text": "pacman::p_load(tidyverse, tsibbledata, fable, feasts, tsibble, ggstatsplot, performance)\n\n\ndf &lt;- read_csv(\"data/dengue_climate_joined_by_week_transformed_diff.csv\")\n\nRows: 359 Columns: 927\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\ndbl  (926): Year, WkNo, Cases, avg_rainfall, tot_rainfall, max_30m_rainfall,...\ndate   (1): Date\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nThe dataframe needs to be converted to a tsibble object before running TSLM model.\n\n# Convert the tibble dataframe to a tsibble dataframe\ntslm_ts &lt;-  df %&gt;% dplyr::select(-c(\"Year\", \"WkNo\"))\ntslm_tbl &lt;- tslm_ts %&gt;% as_tsibble(index = Date) %&gt;% fill_gaps(.full = TRUE) %&gt;% fill(colnames(tslm_ts))\ntslm_slice &lt;- tslm_tbl\n\n\ntslm_mdl &lt;- tslm_slice %&gt;%\n  model(TSLM(log_Cases ~ log_tot_rainfall +\n                  log_avg_temp + \n                  log_max_temp +\n                  log_min_temp +\n                  log_avg_wind +\n                  log_max_wind))\n\nreport(tslm_mdl)\n\nSeries: log_Cases \nModel: TSLM \n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.9871 -0.7553  0.1395  0.6133  2.3336 \n\nCoefficients:\n                  Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      -16.35874    7.72829  -2.117 0.034982 *  \nlog_tot_rainfall   0.11427    0.06095   1.875 0.061632 .  \nlog_avg_temp       8.84930    2.16742   4.083 5.51e-05 ***\nlog_max_temp      -3.42275    2.39728  -1.428 0.154244    \nlog_min_temp       0.10393    0.16670   0.623 0.533363    \nlog_avg_wind       1.25481    0.34959   3.589 0.000378 ***\nlog_max_wind       0.10687    0.22837   0.468 0.640086    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.9111 on 353 degrees of freedom\nMultiple R-squared: 0.07936,    Adjusted R-squared: 0.06371\nF-statistic: 5.071 on 6 and 353 DF, p-value: 5.2194e-05\n\n\n\nv = \"log_Cases\"\nj = \"log_tot_rainfall + log_avg_temp + log_avg_wind\"\ntslm_mdl &lt;- tslm_slice %&gt;%\n          model(TSLM(as.formula(paste0(v,\" ~ \",j))))\n\nreport(tslm_mdl)\n\nSeries: log_Cases \nModel: TSLM \n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.9058 -0.7821  0.1179  0.6230  2.3016 \n\nCoefficients:\n                  Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)      -22.43517    6.26405  -3.582 0.000389 ***\nlog_tot_rainfall   0.12131    0.05869   2.067 0.039468 *  \nlog_avg_temp       7.19398    1.77473   4.054  6.2e-05 ***\nlog_avg_wind       1.33460    0.34523   3.866 0.000132 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.9105 on 356 degrees of freedom\nMultiple R-squared: 0.0727, Adjusted R-squared: 0.06489\nF-statistic: 9.304 on 3 and 356 DF, p-value: 6.151e-06\n\n\n\ntslm_mdl %&gt;%\n  accuracy()\n\n# A tibble: 1 × 10\n  .model               .type        ME  RMSE   MAE   MPE  MAPE  MASE RMSSE  ACF1\n  &lt;chr&gt;                &lt;chr&gt;     &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt; &lt;dbl&gt;\n1 \"TSLM(as.formula(pa… Trai… -1.34e-16 0.905 0.749 -3.30  15.4  4.67  4.48 0.942\n\n\n\ntslm_mdl |&gt;\n  augment() |&gt;\n  ACF() |&gt;\n  autoplot()\n\nResponse variable not specified, automatically selected `var = log_Cases`\n\n\n\n\n\n\ngg_tsresiduals(tslm_mdl)\n\n\n\n\n\naugment(tslm_mdl) %&gt;%\n  ggplot(aes(x = .fitted, y = .resid)) +\n  geom_point() +\n  labs(title = \"Relationship between residuals and fitted values.\",\n       subtitle = \"if a relationship exists, then response variable may require transformation.\",\n       y = \"Residuals\", x = \"Fitted\") +\n  theme_light()\n\n\n\n\n\nggcoefstats(tslm_mdl %&gt;% tidy(), \n            output = \"plot\")\n\n\n\n\n\ntslm_mdl %&gt;% tidy()\n\n# A tibble: 4 × 6\n  .model                              term  estimate std.error statistic p.value\n  &lt;chr&gt;                               &lt;chr&gt;    &lt;dbl&gt;     &lt;dbl&gt;     &lt;dbl&gt;   &lt;dbl&gt;\n1 \"TSLM(as.formula(paste0(v, \\\" ~ \\\"… (Int…  -22.4      6.26       -3.58 3.89e-4\n2 \"TSLM(as.formula(paste0(v, \\\" ~ \\\"… log_…    0.121    0.0587      2.07 3.95e-2\n3 \"TSLM(as.formula(paste0(v, \\\" ~ \\\"… log_…    7.19     1.77        4.05 6.20e-5\n4 \"TSLM(as.formula(paste0(v, \\\" ~ \\\"… log_…    1.33     0.345       3.87 1.32e-4\n\n\n\nvar_fitted &lt;- fitted(tslm_mdl)[,2:3] %&gt;% \n  as_tibble() #%&gt;% \n  #rename(Cases=.fitted)\n\nvar_fitted$Type &lt;- \"Fit\"\n\ntslm_slice$Type &lt;- \"Observed\"\n\nvar_avp &lt;- dplyr::bind_rows(var_fitted, tslm_slice)\n\n\nggplot(data = var_avp) +\n  geom_line(aes(x = Date, y = Cases, colour = Type)) +\n  ggtitle(\"Observed vs Fitted\")\n\nWarning: Removed 360 rows containing missing values or values outside the scale range\n(`geom_line()`).\n\n\n\n\n\n\n\n\n Back to top"
  },
  {
    "objectID": "Shinyapp/Shinyapp.html",
    "href": "Shinyapp/Shinyapp.html",
    "title": "Shinyapp",
    "section": "",
    "text": "Click here to access R Shiny Application\n\n\n\n\n\n Back to top"
  }
]